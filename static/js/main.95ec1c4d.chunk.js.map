{"version":3,"sources":["actions/actionCreators.js","actions/actionTypes.js","components/ServiceAdd.js","components/ServiceList.js","components/ServiceFilter.js","App.js","reducers/serviceListReducer.js","reducers/serviceAddReducer.js","reducers/serviceFilterReducer.js","store/index.js","index.js"],"names":["addService","id","name","price","type","payload","removeService","ServiceAdd","item","useSelector","state","serviceAdd","dispatch","useDispatch","handleChange","evt","target","value","fieldName","changeServiceField","onSubmit","preventDefault","onReset","onChange","ServiceList","items","serviceList","itemsActive","filterList","serviceFilter","filterText","toLowerCase","filterItems","filter","includes","map","o","key","EditFilled","className","onClick","changeService","DeleteFilled","ServiceFilter","filterService","FilterFilled","App","initialState","nanoid","reducer","combineReducers","action","addItem","service","Number","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95ec1c4d.chunk.js","sourcesContent":["import { ADD_SERVICE, REMOVE_SERVICE, CHANGE_SERVICE_FIELD, CHANGE_SERVICE, CHANGE_SERVICE_CANCEL, FILTER_SERVICE } from './actionTypes';\n\nexport function addService(id, name, price) {\n  return {type: ADD_SERVICE, payload: {id, name, price}};\n}\n\nexport function removeService(id) {\n  return {type: REMOVE_SERVICE, payload: {id}};\n}\n\nexport function changeServiceField(fieldName, value) {\n  return {type: CHANGE_SERVICE_FIELD, payload: {fieldName, value}}\n}\n\nexport function changeService(id, name, price) {\n  return {type: CHANGE_SERVICE, payload: {id, name, price}};\n}\n\nexport function changeServiceCancel() {\n  return {type: CHANGE_SERVICE_CANCEL};\n}\n\nexport function filterService(value) {\n  return {type: FILTER_SERVICE, payload: {value}};\n}\n","export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const CHANGE_SERVICE = 'CHANGE_SERVICE';\nexport const CHANGE_SERVICE_CANCEL = 'CHANGE_SERVICE_CANCEL';\nexport const FILTER_SERVICE = 'FILTER_SERVICE';\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeServiceField, addService, changeServiceCancel } from '../actions/actionCreators';\n\nfunction ServiceAdd() {\n\tconst item = useSelector(state => state.serviceAdd);\n\tconst dispatch = useDispatch();\n\n\tconst handleChange = evt => {\n\t\tconst {name, value} = evt.target;\n\t\tdispatch(changeServiceField(name, value));\n\t}\n\n\tconst handleSubmit = evt => {\n\t\tevt.preventDefault();\n\t\tif (item.id) {\n      dispatch(addService(item.id, item.name, item.price))\n    } else {\n      dispatch(addService('', item.name, item.price))\n    }\n\t}\n\n  const handleReset = evt => {\n    dispatch(changeServiceCancel());\n  }\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} onReset={handleReset}>\n\t\t\t<input name='name' onChange={handleChange} value={item.name} />\n\t\t\t<input name='price' onChange={handleChange} value={item.price} />\n\t\t\t<button type='submit'>Save</button>\n      {item.id && <button type='reset'>Cancel</button>}\n\t\t</form>\n\t);\n}\n\nexport default ServiceAdd;\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeService, changeService, changeServiceCancel } from '../actions/actionCreators';\nimport { EditFilled, DeleteFilled } from '@ant-design/icons';\n\nfunction ServiceList() {\n  const items = useSelector(state => state.serviceList);\n  const itemsActive = useSelector(state => state.serviceAdd);\n  const filterList = useSelector(state => state.serviceFilter);\n  const dispatch = useDispatch();\n\n  const filterText = filterList.value.toLowerCase();\n  const filterItems = items.filter((item) => item.name.toLowerCase().includes(filterText));\n\n  const handleRemove = id => {\n    if (itemsActive.id !== id) {\n      dispatch(removeService(id));\n    } else {\n      dispatch(changeServiceCancel());\n      dispatch(removeService(id));\n    }\n  }\n\n  const handleChange = (o) => {\n    const { id, name, price } = o;\n    dispatch(changeService(id, name, price));\n  };\n\n  return (\n    <ul>\n      {filterItems.map(o => (\n        <li key={o.id}>\n          {o.name} {o.price}\n          <EditFilled className=\"button\" onClick={() => handleChange(o)} />\n          <DeleteFilled className=\"button\" onClick={() => handleRemove(o.id)}/>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default ServiceList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterService } from '../actions/actionCreators';\nimport { FilterFilled } from '@ant-design/icons';\n\nfunction ServiceFilter() {\n  const item = useSelector(state => state.serviceFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const {value} = evt.target;\n    dispatch(filterService(value));\n  };\n\n  return (\n    <div className='filter'>\n      <input name='value' onChange={handleChange} value={item.value} />\n      <FilterFilled className=\"button\" />\n    </div>\n  );\n}\n\nexport default ServiceFilter;\n","import React from 'react';\nimport './App.css';\nimport ServiceAdd from './components/ServiceAdd';\nimport ServiceList from './components/ServiceList';\nimport ServiceFilter from './components/ServiceFilter';\n\nfunction App() {\n  return (\n    <>\n      <ServiceFilter />\n      <ServiceAdd />\n      <ServiceList />\n    </>\n  );\n}\n\nexport default App;\n","import { nanoid } from 'nanoid';\nimport { ADD_SERVICE, REMOVE_SERVICE } from '../actions/actionTypes';\n\nconst initialState = [\n  {id: nanoid(), name: 'Замена стекла', price: 21000},\n  {id: nanoid(), name: 'Замена дисплея', price: 25000},\n];\n\nexport default function serviceListReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SERVICE:\n      const addItem = action.payload;\n\n      if (addItem.id) {\n        return state.map((service) => {\n          if (service.id === addItem.id) {\n            return {\n              id: addItem.id,\n              name: addItem.name,\n              price: addItem.price,\n            }\n          }\n          return service;\n        });\n      }\n      return [...state, {id: nanoid(), name: addItem.name, price: Number(addItem.price)}];\n\n    case REMOVE_SERVICE:\n      const {id} = action.payload;\n      return state.filter(service => service.id !== id);\n\n    default:\n      return state;\n  }\n}\n","import { CHANGE_SERVICE_FIELD, ADD_SERVICE, CHANGE_SERVICE, CHANGE_SERVICE_CANCEL } from '../actions/actionTypes';\n\nconst initialState = {\n  id: '',\n  name: '',\n  price: '',\n};\n\nexport default function serviceAddReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_SERVICE_FIELD:\n      const {fieldName, value} = action.payload;\n      return {...state, [fieldName]: value};\n\n    case CHANGE_SERVICE:\n      const {id, name, price} = action.payload;\n      return {id, name, price};\n\n    case ADD_SERVICE:\n      return {...initialState};\n\n    case CHANGE_SERVICE_CANCEL:\n      return {...initialState};\n\n    default:\n      return state;\n  }\n}\n","import { FILTER_SERVICE } from '../actions/actionTypes.js';\n\nconst initialState = {\n  value: '',\n};\n\nexport default function serviceFilterReducer(state = initialState, action) {\n  switch (action.type) {\n    case FILTER_SERVICE:\n      const {value} = action.payload;\n      return {value};\n\n    default:\n      return state;\n  };\n}\n","import { createStore, combineReducers } from 'redux';\nimport serviceListReducer from '../reducers/serviceListReducer';\nimport serviceAddReducer from '../reducers/serviceAddReducer';\nimport serviceFilterReducer from '../reducers/serviceFilterReducer';\n\nconst reducer = combineReducers({\n  serviceList: serviceListReducer,\n  serviceAdd: serviceAddReducer,\n  serviceFilter: serviceFilterReducer,\n});\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}